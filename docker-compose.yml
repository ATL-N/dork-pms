# version: '3.8'
services:
  dorkpf-app:
    image: dorkpf-nextjs:${VERSION:-latest}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${APP_PORT:-3008}:3000"
      - "8080:8080"
    env_file:
     - .env
    environment:
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=https://${DOMAIN}
      - NODE_ENV=production
      - DB_HOST=dorkpf-db
      - PORT=3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.dorkpf-http.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.dorkpf-http.entrypoints=http
      - traefik.http.routers.dorkpf-http.middlewares=https-redirect
      - traefik.http.routers.dorkpf-https.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.dorkpf-https.entrypoints=https
      - traefik.http.routers.dorkpf-https.tls=true
      - traefik.http.routers.dorkpf-https.tls.certresolver=le
      - traefik.http.routers.dorkpf-https.service=dorkpf-service
      - traefik.http.services.dorkpf-service.loadbalancer.server.port=3000
    depends_on:
      dorkpf-db:
        condition: service_healthy
    restart: always
    networks:
      - traefik-public
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  dorkpf-db:
    image: postgres:15-alpine
    ports:
      - "5438:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME:-postgres}
      - DB_HOST=dorkpf-db
    volumes:
      - postgres-data-dorkpf:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
      - ./backups:/app/backups
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-postgres}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - traefik-public
    command:
      - "postgres"
      - "-c"
      - "ssl=off"

volumes:
  postgres-data-dorkpf:
    driver: local

networks:
  traefik-public:
    external: true